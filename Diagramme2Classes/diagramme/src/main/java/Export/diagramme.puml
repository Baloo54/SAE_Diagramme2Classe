@startuml
class Attribut {
    - nom : String
    - type : String
    - modificateurs : ArrayList
    + equals(arg0 : Object) : boolean
    + getType() : String
    + getModificateurs() : ArrayList
    + addModificateur(arg0 : String) : void
    + getNom() : String
}
Visible <|-- Attribut
class Classe {
    - classeParent : Classe
    - classesFilles : HashMap
    + changerVisibiliteClasseFille(arg0 : Classe) : void
    + changerVisibiliteHeritage() : void
    + changerVisibilite() : void
    + setClasseParent(arg0 : Classe) : void
    + getClasseParent() : Classe
}
Interface <|-- Classe
class Export {
    + exportPng(arg0 : List) : String
    + exportPuml(arg0 : List) : String
    - getPumlModificateur(arg0 : List) : String
    - toBufferedImage(arg0 : WritableImage) : BufferedImage
}
Object <|-- Export
class Interface {
    - interfaces : ArrayList
    - methodes : ArrayList
    - attributs : ArrayList
    - interfacesFilles : HashMap
    - heritageVisible : boolean
    - packageClasse : String
    + equals(arg0 : Object) : boolean
    + getInterfaces() : ArrayList
    + addMethode(arg0 : Methode) : void
    + changerVisibiliteMethode(arg0 : Methode) : void
    + changerVisibiliteInterfaceFille(arg0 : Interface) : void
    + changerVisibiliteHeritage() : void
    + changerVisibilite() : void
    + getPackageClasse() : String
    + getHeritageVisible() : boolean
    + addInterface(arg0 : Interface) : void
    + getAttributs() : ArrayList
    + addAttribut(arg0 : Attribut) : void
    + etreVisibleFille(arg0 : Interface) : boolean
    + getMethodes() : ArrayList
}
Attribut <|-- Interface
class Methode {
    - nom : String
    - typeRetour : String
    - parametres : List
    - modificateurs : ArrayList
    + equals(arg0 : Object) : boolean
    + getModificateurs() : ArrayList
    + getTypeRetour() : String
    + getParametres() : List
    + getNom() : String
}
Visible <|-- Methode
class Visible {
    - visible : boolean
    + getVisible() : boolean
    + changerVisibilite() : void
}
Object <|-- Visible
@enduml
